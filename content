{"data":[{"id":2653,"title":"Mengenal Container dan Docker Sampai Jago Dalam 2 Jam","url":"https://www.youtube.com/watch?v=26O6Ke03j3Y","body":null,"tags":"","media":"video","thumbnail":null,"owner":"","draft":false,"original_published_at":"2021-06-16T04:34:50","created_at":"2021-06-14T23:40:26.249881","updated_at":"2021-06-14T23:40:26.249881","deleted_at":null,"source_id":62,"contributor":"PuloDev"},{"id":2679,"title":"Introducing, Monika WhatsApp Notifier","url":"https://medium.com/hyperjump-tech/introducing-monika-whatsapp-notifier-6f74df3ac4cb?source=rss----fabfd42372dc---4","body":null,"tags":"quality-assurance,monitoring,open-source,devops,nodejs","media":"tulisan","thumbnail":null,"owner":"Nico Prananta","draft":false,"original_published_at":"2021-06-15T06:25:22","created_at":"2021-06-15T12:14:36.189121","updated_at":"2021-06-15T12:14:36.189121","deleted_at":null,"source_id":46,"contributor":"2co_p"},{"id":1724,"title":"Press Release: Dockerize No Code Platform‚Ää‚Äî‚ÄäKaredock","url":"https://blog.javan.co.id/press-release-dockerize-no-code-platform-karedock-8a96350a7f39?source=rss-2606b80d8d49------2","body":null,"tags":"no-code,docker,platform","media":"tulisan","thumbnail":null,"owner":"Qisthi Ramadhani","draft":false,"original_published_at":"2021-06-14T10:15:26","created_at":"2021-06-14T12:17:48.350282","updated_at":"2021-06-14T12:17:48.350282","deleted_at":null,"source_id":56,"contributor":"Qisthi Ramadhani"},{"id":2596,"title":"[mks.py] Object-Oriented Programming in Python","url":"https://www.youtube.com/watch?v=9DtP6Krlsww","body":null,"tags":"","media":"video","thumbnail":null,"owner":"","draft":false,"original_published_at":"2021-06-13T21:43:33","created_at":"2021-06-14T23:28:55.159475","updated_at":"2021-06-14T23:28:55.159475","deleted_at":null,"source_id":28,"contributor":"oon"},{"id":1723,"title":"Setup Xcode dan Memulai Swift Playground","url":"https://wisnuwiry.space/post/setup-xcode-dan-memulai-swift-playground/","body":"Jika Anda ingin memulai belajar membuat aplikasi IOS Anda perlu menggunakan IDE yang bernama Xcode.","tags":"","media":"tulisan","thumbnail":null,"owner":"wisnuwiry@gmail.com (Wisnu G. Saputra)","draft":false,"original_published_at":"2021-06-13T16:00:00","created_at":"2021-06-14T00:37:09.35623","updated_at":"2021-06-14T00:37:09.35623","deleted_at":null,"source_id":44,"contributor":"wisnuwiry"},{"id":1722,"title":"Over Hangman","url":"https://over-hangman.iwgx.io/","body":"Tech-related question hangman game","tags":"web,hangman,game,react,tailwind,mobx","media":"web","thumbnail":"https://i.ibb.co/5LYPM4Z/overhangman-card.png","owner":"iwgx","draft":false,"original_published_at":"2021-06-13T15:37:36.33","created_at":"2021-06-13T15:39:22.640241","updated_at":"2021-06-13T15:39:22.640241","deleted_at":null,"source_id":null,"contributor":"Ilham Wahabi"},{"id":1720,"title":"Algoritma dalam pemrograman adalah","url":"https://belajarprogramming.id/algoritma-dalam-pemrograman-adalah/","body":"Algoritma sudah tidak asing lagi ditelinga kita, khususnya didunia pemrograman. Untuk seorang programmer/software engineer algoritma adalah hal yang dihadapi sehari-hari untuk menyelesaikan pekerjaan mereka. Algoritma dalam pemrograman pada dasarnya adalah... \nThe post Algoritma dalam pemrograman adalah appeared first on Belajar Programming.","tags":"Cerita,Programming,programming","media":"tulisan","thumbnail":null,"owner":"Wakabayashi","draft":false,"original_published_at":"2021-06-13T05:27:36","created_at":"2021-06-13T12:17:22.01921","updated_at":"2021-06-13T12:17:22.01921","deleted_at":null,"source_id":9,"contributor":"chaidiryahya"},{"id":2576,"title":"[Trailer] Resign: Solusi Gagal Promosi (?) ft. OKR | Podcast Ngobrolin Startup & Teknologi","url":"https://www.youtube.com/watch?v=ryWRoIcTDcc","body":null,"tags":"","media":"video","thumbnail":null,"owner":"","draft":false,"original_published_at":"2021-06-13T04:11:27","created_at":"2021-06-14T23:28:45.090793","updated_at":"2021-06-14T23:28:45.090793","deleted_at":null,"source_id":62,"contributor":"PuloDev"},{"id":2654,"title":"Cara Install PHP di Debian 10","url":"https://nothinux.id/cara-install-php-di-debian-10/","body":"Cara Install PHP di Debian 10, PHP Merupakan bahasa pemrograman ‚Ä¶\nThe post Cara Install PHP di Debian 10 appeared first on Nothinux.","tags":"Debian,Apache,debian10,PHP","media":"tulisan","thumbnail":null,"owner":"Taufik Mulyana","draft":false,"original_published_at":"2021-06-13T04:09:22","created_at":"2021-06-15T06:11:59.483492","updated_at":"2021-06-15T06:11:59.483492","deleted_at":null,"source_id":63,"contributor":"Taufik Mulyana"},{"id":1721,"title":"Mencoba sihir baru: Hotwire","url":"philiplambok.github.io/rails,/hotwire/2021/06/13/mencoba-sihir-baru-hotwire.html","body":"Hotwire aka NEW MAGIC is finally here: An alternative approach to building modern web applications without using much JavaScript by sending HTML instead of JSON over the wire. This includes our brand-new Turbo framework and pairs with Stimulus 2.0 üòçüéâü•Ç https://t.co/Pa4EG8Av5E\n‚Äî DHH (@dhh) December 22, 2020\n\n\nSetelah pertama kali spoiler the new magic di juni 2020, dan pertama kali rilis di desember 2020, akhirnya baru bisa coba di juni 2021\nSad Cute GIF from Sad GIFs\n\n\n\n\nAnyways,\nKalo liat di dokumentasi Hotwire disini: https://hotwire.dev/, hotwire terdiri dari tiga paket yaitu Turbo, Stimulus, dan Strada.\nTurbo adalah sebuah kumpulan teknik yang dapat digunakan untuk mempercepat pergantian halaman, dan submission form, memecahkan halaman yang kompleks menjadi komponen, dan stream update halaman partial lewat websocket.\nStimulus adalah sebuah framework javascript yang memiliki pedoman pada HTML-centric, saya udah pernah nulis terkait paket ini sebelumnya, bisa di cek disini: Real-time search with stimulus.js, My love story with stimulus.js\nTerakhir adalah strada, sebuah paket untuk membantu development pada native app, seperti mobile. Paket ini masih belum rilis saat tulisan ini dipublikasi.\nJadi, tulisan ini akan banyak ngobrolin tentang turbo.\nSeperti biasa, kita akan mencoba membuat aplikasi menggunakan teknologi ini, aplikasi yang akan dibuat sederhana saja, kita akan membuat aplikasi chat, user bisa submit chat baru, edit dan hapus, itu saja.\nSample apikasinya bisa dilihat dari gambar ini:\n\nSaya memakai marquee (tulisan berjalan) untuk menandakan tidak ada reload halaman secara keseluruhan, tapi pergantian halaman dilakukan hanya pada sepesifik DOM element aja.\nInstalasi\nSeperti biasa, hal yang pertama kali dilakukan silahkan init railsnya dulu:\n\n$ rails new hotwire-chat-example -T --database=mysql\n\n\nSetelah di-init silahkan install hotwirenya, dengan cara ini:\n\n$ bundle add hotwire-rails\n$ bundle install\n$ rails hotwire:install\n\n\nBisa lihat disini untuk lebih detailnya: https://github.com/hotwired/hotwire-rails\nMembuat fitur create chat\nSeperti yang dibilang sebelumnya, pada tulisan ini saya cuman bakal bahas teknologi Turbo aja. Jadi kalo liat di docsnya. Ada 3 paket di Turbo ini:\nTurbo drive, dari tagline docsnya paket ini adalah evolusi dari paket Turbolinks yang udah ada di rails saat ini.\nTurbo frame, sebuah paket yang digunakan untuk membuat sebuah komponen frame yang dinamis. Secara konsep mirip seperti html iframe tag.\nTurbo stream, sebuah paket yang dapat digunakan sebagai abstraksi komunikasi websocket yang nantinya digunakan untuk mengupdate halaman frontend-nya.\nOk, sekarang mari kita develop fitur create chatnya. Pada fitur create chat ini yang perlu kita lakukan adalah membuat sebuah form text field untuk submit input pesannya, dan menampikan pesannya dihalaman yang sama.\nDimulai dari routes.rb.\n\n# config/routes.rb\nRails.application.routes.draw do\n  resources :chats\n  root 'home#index'\nend\n\n\nGk ada yang aneh, kita bikin HomeController sebagai routesnya, dan bikin resources :chats sebagai controller untuk membuat record chat-nya.\nPada controllernya ditulis gini:\n\n# app/controllers/home_controller.rb\nclass HomeController < ApplicationController\n  def index\n    @chats = Chat.all\n    @new_chat = Chat.new\n  end\nend\n\n# app/controllers/chats_controller.rb\nclass ChatsController < ApplicationController\n  def create\n    Chat.create!(chat_params)\n    respond_to do |format|\n      format.html do\n        redirect_to root_path\n      end\n    end\n  end\n\n  private\n\n  def chat_params\n    params.require(:chat).permit(:message)\n  end\nend\n\n\nPada modelnya gini:\n\n# app/views/chat.rb\nclass Chat < ApplicationRecord\n  after_create { broadcast_append_to \"chats\" }\nend\n\n\nPada controllernya tidak ada yang baru, yang baru hanya pada model Chatnya. Yaitu penggunakan callback broadcast_append_to, callback ini digunakan untuk untuk melakukan broadcast untuk perubahan DOM element dengan append yaitu penambahan element, secara default element yang dikirim adalah partial chats/_chat.html dalam Channel chats.\nBroadcast ini menggunakan teknologi ActionCable, saya harap anda sudah familiar dengan paket itu terlebih dahulu.\nPada viewsnya tulis begini:\n\n<!-- #app/views/home/index.html.erb -->\n<%= turbo_stream_from \"chats\" %>\n\n<div class=\"container mt-4\">\n  <div class=\"row\">\n    <div class=\"col-md-6 m-auto\">\n      <h4>Chat example app</h4>\n\n      <marquee>Time: <%= DateTime.now %></marquee>\n      \n      <%= render 'chats/chats', chats: @chats %>\n\n      <hr>\n      \n      <%= turbo_frame_tag \"chat_form\" do %>\n        <%= render 'chats/form', chat: @new_chat %>\n      <% end %>\n    </div>\n  </div>\n</div>\n\n\nPada partial viewnya:\n\n<!-- #app/views/chats/_chats_.html.erb -->\n<ul id=\"chats\" class=\"list-group list-group-flush my-4\">\n  <% chats.each do |chat| %>\n    <%= render chat %>\n  <% end %>\n</ul>\n\n\n\n<!-- #app/views/chats/_chat_.html.erb -->\n<li class=\"list-group-item d-flex justify-content-between\">\n  <%= chat.message %>\n  <div>\n    <%= link_to 'Edit', '#' %>\n    <%= link_to 'Remove', '#' %>\n  </div>\n</li>\n\n\nHasilnya akan gini:\n\nPada partialnya ada helper yang baru yaitu <%= turbo_stream_from \"chats\" %> dan <%= turbo_frame_tag \"chat_form\" do %>.\nturbo_stream_from \"chats\" digunakan untuk listen websocket changes pada channel chats. Dimana pada kasus ini kita melakukan trigger changes dom yang dilakukan pada modelnya broadcast_append_to, dan pada log juga kita bisa lihat:\n\nStarted POST \"/chats\" for ::1 at 2021-06-13 09:47:27 +0700\nProcessing by ChatsController#create as TURBO_STREAM\n ...\n[ActionCable] Broadcasting to chats: \"<turbo-stream action=\\\"append\\\" target=\\\"chats\\\"><template><turbo-frame id=\\\"chat_124\\\">\\n  <li class=\\\"list-group-item d-flex justify-content-between\\\">\\n    Empat\\n    <div>\\n      <a href=\\\"/chats/124/edit?time=1623552448\\\">Edit</a>\\n      <a rel=\\\"nofollow\\\" data-method=\\\"delete\\\" href=\\\"/chats/124\\\">Remove</a>\\n    </div>\\n  </li>\\n</turbo-frame></template></turbo-stream>\"\nTurbo::StreamsChannel transmitting \"<turbo-stream action=\\\"append\\\" target=\\\"chats\\\"><template><turbo-frame id=\\\"chat_124\\\">\\n  <li class=\\\"list-group-item d-flex justify-content-between\\\">\\n    Empat\\n    <div>\\n      <a href=\\\"/chats/124/edit?time=1623552448\\\">Edit</a>\\n      <a rel=\\\"nofollow\\\" data-method=\\\"delete\\\" href=\\\"/ch... (via streamed from chats)\n  TRANSACTION (1.2ms)  COMMIT\n  ‚Ü≥ app/controllers/chats_controller.rb:3:in `create'\nRedirected to http://localhost:3000/\nCompleted 302 Found in 14ms (ActiveRecord: 8.0ms | Allocations: 3850)\n\n\nActionya adalah append yaitu akan menambahkan data baru dari element paling bawah, layaknya konsep push pada Stack. Dan target elementnya adalah #chats jadi pastikan anda sudah membuat targetnya dulu, sedangkan changes element yang dikirim adalah view yang diambil dari partial default dari modelnya yaitu chats/_chat.html.erb.\nKonsep kedua yang baru yaitu turbo_frame_tag \"chat_form\", seperti yang sudah dibilang sebelumnya turbo frame ini layaknya konsep iframe, padahal di controllernya saya balikin redirect_to, tapi yang ganti cukup element yang didalem tag turbo_frame_tagnya aja gk semuanya. Cukup simple bukan?\nMembuat fitur edit\nFitur selanjutnya adalah fitur edit, pada fitur ini kita akan menggunakan konsep Turbo frame saja. Dimulai dari partial viewnya:\n\n<!-- app/views/chats/_chat.html.erb -->\n<%= turbo_frame_tag dom_id(chat) do %>\n  <li class=\"list-group-item d-flex justify-content-between\">\n    <%= chat.message %>\n    <div>\n      <%= link_to 'Edit', edit_chat_path(chat) %>\n      <%= link_to 'Remove', \"#\" %>\n    </div>\n  </li>\n<% end %>\n\n\nKita update link editnya untuk redirect ke controller edit.\nPada controllernya kita update jadi seperti ini:\n\n# app/controllers/chats_controller.rb\nclass ChatsController < ApplicationController\n  # ...\n  def edit\n    @chat = Chat.find params[:id]\n  end\n\n  def update\n    chat = Chat.find params[:id]\n    chat.update!(chat_params)\n    respond_to do |format|\n      format.html do\n        redirect_to chat_path\n      end\n    end\n  end\n\n\nDan pada views edit.html.erbnya dibuat gini:\n\n<!-- app/views/chats/edit.html.erb -->\n<%= turbo_frame_tag dom_id(@chat) do %>\n  <li class=\"list-group-item\">\n    <%= form_with(model: @chat, url: chat_path(@chat), method: :put, class: 'd-flex justify-content-between') do |form| %>\n      <div class=\"col-auto\">\n        <%= form.text_field :message, class: 'form-control' %> \n      </div>\n      <%= form.submit 'Update', class: 'ml-auto btn btn-primary' %>\n    </div>\n    <% end %>\n  </li>\n<% end %>\n\n\nAnd done. It‚Äôs work!\n\nMungkin anda bertanya, kenapa perlu tag turbo_frame_tag dom_id(@chat) di file partial edit.html.erb-nya? Yups benar, kita perlu itu karna rails tidak serta-merta langsung mengganti elementnya dengan semua file responsenya, namun ia perlu melakukan matching terlebih dahulu sama framenya. Karta pada source viewnya kita taro frame dengan nama dom_id(chat) maka, ia akan mengganti frame itu dari response dengan frame yang sama yaitu dom_id(chat), jadi kalo misalnya edit.html.erbnya kita update jadi gini:\n\n<!-- app/views/chats/edit.html.erb -->\n<h1> Ini tidak ditampilkan karna diluar frame</h1>\n\n<%= turbo_frame_tag dom_id(@chat) do %>\n  <li class=\"list-group-item\">\n    <%= form_with(model: @chat, url: chat_path(@chat), method: :put, class: 'd-flex justify-content-between') do |form| %>\n      <div class=\"col-auto\">\n        <%= form.text_field :message, class: 'form-control' %> \n      </div>\n      <%= form.submit 'Update', class: 'ml-auto btn btn-primary' %>\n    </div>\n    <% end %>\n  </li>\n<% end %>\n\n\nHasil masih akan tetap sama.\nMembuat fitur delete\nFitur selanjutnya adalah fitur delete. Kita mulai dari update viewnya:\n\n<!-- app/views/chats/_chat.html.erb -->\n<%= turbo_frame_tag dom_id(chat) do %>\n  <li class=\"list-group-item d-flex justify-content-between\">\n    <%= chat.message %>\n    <div>\n      <%= link_to 'Edit', edit_chat_path(chat) %>\n      <%= link_to 'Remove', chat_path(chat), method: :delete %>\n    </div>\n  </li>\n<% end %>\n\n\nUntuk fitur ini kita perlu menggunakan konsep Turbo stream, untuk mengirim stream action remove ke target dom #chats. Pada controllernya kita bikin gini:\n\n# app/controllers/chats_controller.rb\nclass ChatsController < ApplicationController\n  # ...\n  def destroy\n    chat = Chat.find params[:id]\n    chat.destroy!\n    respond_to do |format|\n      format.html do\n        head :no_content\n      end\n    end\n  end\nend\n\n\nKita tidak perlu merender apa2 pada controllernya, karna cukup mengirim stream action remove dom lewat websocketnya, yang ditrigger lewat model:\n\nclass Chat < ApplicationRecord\n  # ...\n  after_destroy_commit { broadcast_remove_to 'chats' }\nend\n\n\nDone, and it‚Äôs works!\n\nSecara konsep mirip saat create, perbedannya hanya di action turbo streamnya saja, kalo pada create kita pake append kalo pada destroy kita pake remove.\nImprovement\nKalo liat pada demo aplikasi yang pertama kali mungkin anda sadar kita ada fitur untuk memberikan pesan ‚ÄúNo Chats‚Äù, bisa liat lagi:\n\nUntuk fitur ini belum disupport dengan kode yang ada. Kode yang ada saat ini tidak akan menampilan data chat pertama kali.\n\n<!-- app/views/chats/_chats.html.erb -->\n<ul id=\"chats\" class=\"list-group list-group-flush my-4\">\n  <% if chats.blank? %>\n    <p class=\"text-center my-4\">No chats</p>\n  <% else %>\n      <% chats.each do |chat| %>\n        <%= render chat %>\n      <% end %>\n  <% end %>\n</ul>\n\n\nUntuk mensupport itu kita perlu update modelnya menjadi seperti ini:\n\nclass Chat < ApplicationRecord\n  after_create :append_chat_dom\n  after_destroy_commit :remove_chat_dom\n\n  private\n\n  def append_chat_dom\n    if Chat.all.size.eql?(1)\n      broadcast_replace_to 'chats', target: 'chats',\n                                    partial: 'chats/chats',\n                                    locals: { chats: Chat.all }\n    else\n      broadcast_append_to 'chats'\n    end\n  end\n\n  def remove_chat_dom\n    if Chat.all.blank?\n      broadcast_replace_to 'chats', target: 'chats',\n                                    partial: 'chats/chats',\n                                    locals: { chats: Chat.all }\n    else\n      broadcast_remove_to 'chats'\n    end\n  end\nend\n\n\nKita perlu melakukan perbedaan pada chat ketika data kosong. Yaitu contohnya pada create ketika itu adalah chat yang pertama kali, kita akan melakukan render replace pada view chats/chats rather than melalukan append. Begitu juga dengan destroy-nya kita akan melakukan replace pada view chats/chats daripada hanya melakukan remove domnya.\nSaya rasa itu saja cukup pada tulisan ini, mudah2an tulisan ini dapat membantu anda dalam mengenal teknologi hotwire ini (yang pasalnya akan menjadi default paket pada Rails 7 mendatang). Jika anda tertarik melihat sample codenya bisa ditemukan disini ya: hotwire-chat-example. Happy hacking~","tags":"","media":"web","thumbnail":null,"owner":"","draft":false,"original_published_at":"2021-06-13T03:10:00","created_at":"2021-06-13T12:17:25.380083","updated_at":"2021-06-13T12:17:25.380083","deleted_at":null,"source_id":59,"contributor":"Philip Lambok"},{"id":2577,"title":"Ngobrol Santai Bareng Odi (@mathdroid) Tentang Apapun (Freelancer, dll)","url":"https://www.youtube.com/watch?v=uvJms7BWtuA","body":null,"tags":"","media":"video","thumbnail":null,"owner":"","draft":false,"original_published_at":"2021-06-12T15:34:46","created_at":"2021-06-14T23:28:45.090793","updated_at":"2021-06-14T23:28:45.090793","deleted_at":null,"source_id":62,"contributor":"PuloDev"},{"id":1708,"title":"Mengenal CI/CD Pipeline","url":"https://anchor.fm/deep-tech/episodes/Mengenal-CICD-Pipeline-e12j015","body":"Jika kamu melihat sebuah software atau aplikasi dengan embel-embel \"beta\" Itu artinya pengembangan software tersebut belum sepenuhnya tuntas. Mungkin kamu jadi berpikir, kenapa software sudah dirilis kalau developmentnya belum selesai?\nTujuannya agar tim pengembang mendapatkan feedback sehingga produk tersebut bisa terus dikembangkan sampai hasil yang diinginkan tercapai. Proses iterasi ini menjadi prinsip DevOps terutama dalam penerapan CI/CD Pipeline.¬†\nYuk kenalan lebih jauh tentang CI/CD Pipeline bersama Wicaksono Trihatmaja, Head of Infrastructure Bukalapak","tags":"","media":"podcast","thumbnail":null,"owner":"deep tech foundation","draft":false,"original_published_at":"2021-06-11T09:00:22","created_at":"2021-06-11T12:17:03.168448","updated_at":"2021-06-11T12:17:03.168448","deleted_at":null,"source_id":4,"contributor":"hilmanski"},{"id":1707,"title":"CekWebsiteSaya.com: Cek website saya dari jaringan Telkom Indonesia","url":"https://cekwebsitesaya.com","body":"- Cek apakah website Anda dapat diakses menggunakan jaringan Telkom\n- Cek apakah website Anda termasuk dalam daftar blokir (TrustPositif)\n- Cek apakah website Anda mengalami pencegatan bandwidth","tags":"web, monitoring","media":"web","thumbnail":"","owner":"@fransallen","draft":false,"original_published_at":"2021-06-11T06:13:19.125","created_at":"2021-06-11T06:19:55.627209","updated_at":"2021-06-11T06:19:55.627209","deleted_at":null,"source_id":null,"contributor":"Frans Allen"},{"id":2578,"title":"Berkenalan Dengan Software Design Pattern + Factory Pattern | CodingClass S1 ‚¶Å E1","url":"https://www.youtube.com/watch?v=H2UZlBBj4wM","body":null,"tags":"","media":"video","thumbnail":null,"owner":"","draft":false,"original_published_at":"2021-06-11T03:22:02","created_at":"2021-06-14T23:28:45.090793","updated_at":"2021-06-14T23:28:45.090793","deleted_at":null,"source_id":62,"contributor":"PuloDev"},{"id":2664,"title":"#DidietChallenge - Membangun API Server menggunakan PHP tanpa Database - Part 2","url":"https://www.youtube.com/watch?v=S_aTkwGGIZI","body":null,"tags":"","media":"video","thumbnail":null,"owner":"","draft":false,"original_published_at":"2021-06-10T23:21:42","created_at":"2021-06-15T06:12:03.196191","updated_at":"2021-06-15T06:12:03.196191","deleted_at":null,"source_id":64,"contributor":"@Petrabarus"},{"id":2655,"title":"Cara Install SQLite dan SQLite Browser di Ubuntu","url":"https://nothinux.id/cara-install-sqlite-di-ubuntu/","body":"Cara Install SQLite dan SQLite Browser di Ubuntu, SQLite adalah ‚Ä¶\nThe post Cara Install SQLite dan SQLite Browser di Ubuntu appeared first on Nothinux.","tags":"How to,sqlite","media":"tulisan","thumbnail":null,"owner":"Taufik Mulyana","draft":false,"original_published_at":"2021-06-10T14:26:30","created_at":"2021-06-15T06:11:59.483492","updated_at":"2021-06-15T06:11:59.483492","deleted_at":null,"source_id":63,"contributor":"Taufik Mulyana"},{"id":2656,"title":"Reverse Proxy Aplikasi Node.js dengan Nginx","url":"https://nothinux.id/reverse-proxy-aplikasi-node-js-dengan-nginx/","body":"Reverse Proxy Aplikasi Node.js dengan Nginx, Nginx merupakan sebuah webserver ‚Ä¶\nThe post Reverse Proxy Aplikasi Node.js dengan Nginx appeared first on Nothinux.","tags":"nginx,Nginx,nodejs","media":"tulisan","thumbnail":null,"owner":"Taufik Mulyana","draft":false,"original_published_at":"2021-06-09T14:33:00","created_at":"2021-06-15T06:11:59.483492","updated_at":"2021-06-15T06:11:59.483492","deleted_at":null,"source_id":63,"contributor":"Taufik Mulyana"},{"id":2579,"title":"Membuat Login Aplikasi/Web Tanpa Harus Ngoding Backend Dengan Google Cloud Identity Platform","url":"https://www.youtube.com/watch?v=n76n0yxz5gg","body":null,"tags":"","media":"video","thumbnail":null,"owner":"","draft":false,"original_published_at":"2021-06-09T03:52:54","created_at":"2021-06-14T23:28:45.090793","updated_at":"2021-06-14T23:28:45.090793","deleted_at":null,"source_id":62,"contributor":"PuloDev"},{"id":2665,"title":"#DidietChallenge - Membangun API Server menggunakan PHP tanpa Database","url":"https://www.youtube.com/watch?v=Qh963N4FimY","body":null,"tags":"","media":"video","thumbnail":null,"owner":"","draft":false,"original_published_at":"2021-06-09T02:09:57","created_at":"2021-06-15T06:12:03.196191","updated_at":"2021-06-15T06:12:03.196191","deleted_at":null,"source_id":64,"contributor":"@Petrabarus"},{"id":1706,"title":"Web Interface Handbook","url":"https://imperavi.com/books/web-interface-handbook","body":"dasar-dasar membuat antarmuka web yang baik. ","tags":"desain,tips,website","media":"web","thumbnail":"","owner":"Imperavi","draft":false,"original_published_at":"2021-06-08T11:24:20.031","created_at":"2021-06-08T11:26:53.406522","updated_at":"2021-06-08T11:26:53.406522","deleted_at":null,"source_id":null,"contributor":"lakuapik"},{"id":2657,"title":"Cara Install Postgresql di Ubuntu","url":"https://nothinux.id/cara-install-postgresql-di-ubuntu/","body":"Cara Install Postgresql di Ubuntu 18.04 dan 20.04, Postgresql adalah ‚Ä¶\nThe post Cara Install Postgresql di Ubuntu appeared first on Nothinux.","tags":"How to,postgresql","media":"tulisan","thumbnail":null,"owner":"Taufik Mulyana","draft":false,"original_published_at":"2021-06-07T23:33:42","created_at":"2021-06-15T06:11:59.483492","updated_at":"2021-06-15T06:11:59.483492","deleted_at":null,"source_id":63,"contributor":"Taufik Mulyana"},{"id":2658,"title":"Cara Install VMware Workstation Player di Ubuntu","url":"https://nothinux.id/cara-install-vmware-di-ubuntu/","body":"Cara Install VMware Workstation Player di Ubuntu, VMware Player adalah ‚Ä¶\nThe post Cara Install VMware Workstation Player di Ubuntu appeared first on Nothinux.","tags":"How to,vm","media":"tulisan","thumbnail":null,"owner":"Taufik Mulyana","draft":false,"original_published_at":"2021-06-07T13:24:36","created_at":"2021-06-15T06:11:59.483492","updated_at":"2021-06-15T06:11:59.483492","deleted_at":null,"source_id":63,"contributor":"Taufik Mulyana"},{"id":1703,"title":"Event-Driven Architecture","url":"https://hellodit.medium.com/event-driven-architecture-5e78d4e96508?source=rss-bec8db944a8e------2","body":null,"tags":"asynchronous,messaging,microservice-architecture,rabbitmq,event-driven-architecture","media":"tulisan","thumbnail":null,"owner":"Asdita Prasetya","draft":false,"original_published_at":"2021-06-07T08:59:38","created_at":"2021-06-07T12:51:34.582471","updated_at":"2021-06-07T12:51:34.582471","deleted_at":null,"source_id":51,"contributor":"hellodit"},{"id":1702,"title":"Outline Blue dan Aksesibilitas pada Chakra UI","url":"https://blog.cerita-faldi.xyz/outline-blue-dan-accesbility-pada-chakra-ui/","body":"Chakra UI memberikan focus:box-shadow yang ternyata adalah property box-shadow bukan border atau outline pada setiap element.","tags":"Insight,Lesson Learned,NextJS,ChakraUI,Accesibility,CSS","media":"tulisan","thumbnail":null,"owner":"Faldi","draft":false,"original_published_at":"2021-06-07T06:51:57","created_at":"2021-06-07T12:51:20.843338","updated_at":"2021-06-07T12:51:20.843338","deleted_at":null,"source_id":15,"contributor":"naufaldi"},{"id":1704,"title":"Ingin menjadi Developer Handal? Cek 5 website ini!","url":"https://blog.azuralabs.id/menjadi-developer-handal/","body":"Menjadi developer? Bukankah sulit? Memang, saat ini semua framework ataupun bahasa pemograman memiliki dokumentasi yang sangat rapi. Hal ini memudahkan developer profesional untuk belajar framework atau pun bahasa pemograman. Namun untuk developer yang masih baru, membaca dokumentasi bisa menjadikan momok yang sangat menakutkan. Oleh karena itu, banyak developer pemula yang lebih suka mencari permasalahan yang sama di google lalu melakukan copy paste code. Namun, jika demikian, tetunya para developer tersebut tidak memahami, atau bahkan mengetahui seluruh code yang mereka copy paste.\nBaca lebih lanjut - Ingin menjadi Developer Handal? Cek 5 website ini! at Azura Labs Newsletter.","tags":"Uncategorized","media":"tulisan","thumbnail":null,"owner":"azuralabs","draft":false,"original_published_at":"2021-06-07T02:37:00","created_at":"2021-06-07T12:51:40.37616","updated_at":"2021-06-07T12:51:40.37616","deleted_at":null,"source_id":45,"contributor":"azuralabs"},{"id":2659,"title":"Cara Install Golang di Ubuntu","url":"https://nothinux.id/cara-install-golang-di-ubuntu/","body":"Cara Install Golang di Ubuntu, Golang atau Go merupakan bahasa ‚Ä¶\nThe post Cara Install Golang di Ubuntu appeared first on Nothinux.","tags":"Golang,Ubuntu,golang","media":"tulisan","thumbnail":null,"owner":"Taufik Mulyana","draft":false,"original_published_at":"2021-06-06T09:00:17","created_at":"2021-06-15T06:11:59.483492","updated_at":"2021-06-15T06:11:59.483492","deleted_at":null,"source_id":63,"contributor":"Taufik Mulyana"}],"total":1217}